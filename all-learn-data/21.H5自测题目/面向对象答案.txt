1.改变this指向方法，及其区别
call,apply,bind     call直接传值，apply要传数组
定时器的场景：箭头函数规避指向问题
2.console.log是谁的函数
window

3.setTimeout是谁的函数
window

4.什么是构造属性
constructor

5.判断一个对象是不是类的实例
instaceof

6.如何给原型对象添加多个方法
Person.prototype ={
                sayName:function(){
                    console.log(this.name)
                },
                sayAge(){
                    console.log(this.age)
                }
            }

7.以直接量(字面量)的形式添加属性有什么问题
构造属性会指向Object

8.类是对象吗？ 对象是什么？
类是抽象的对象  ，对象是某一个类的实例

9.什么是构造函数？
构造一个类的函数或者构造一个对象的函数

10.构造函数的特点
1.首字母大写，
2.函数内部使用this关键字，谁New（谁实例化）就指向谁
3.使用htis关键字生成对象
4.必须使用new关键字生成对象

11.基本数据类型和引用数据类型的区别（场景：赋值语句）
	基本数据类型只传值，引用数据类型既传值也传址

12.引用数据类型占据哪些内存空间，各个内存空间存放什么？
声明一个引用数据类型，占用两块内存空间(栈内存放变量，堆内存放实际对象)
        // 栈内存中的变量存的是一个引用(指针，地址的值)，指向堆内存中的实际对象
var arr = [1,2,3];
        // 赋值运算，赋的值是引用(指针，地址的值)，指向堆内存中的同一个对象
        var sum = arr;
        console.log(sum)
        // 改变了堆内存中的同一个对象的值[1,2,3,4]
        arr.push(4)
        // 因此sum存的地址所指向的值为[1,2,3,4]
        console.log(sum) //[1,2,3,4]

13.继承属性的方法，继承方法的方法
1.Teacher.prototype = Person.prototype;
2.Teacher.prototype = Object.create(Person.prototype,{
            constructor:{
                value:Teacher  //重置构造属性
            }
        })
14.父对象能够调用子对象吗？

15.如何重置构造属性
Teacher.prototype.constructor = Teacher;

16.面向对象的三大特征

17.怎样深拷贝，有何局限
展开方法，concat,slice

18.如何读取对象的属性值
点的方法
19.什么是公有属性，什么是私有属性
公有属性一般在原型对象上
            // 私有属性 通过this关键字去添加的
20.用什么方法判断私有属性
hasOwnproperty

21.原型对象的作用
作用：将对象通用的方法挂载在原型上

22.继承的本质
JS的继承是基于原型对象的继承

23.为什么能新建的数组能使用数组的方法
方法在数组的原型对象上存在

24.如何查看原型，什么是原型对象
	proto属性 ，prototype

25.什么是原型链
由Proto属性连接起来的链路就是原型链

26.什么是原型对象
是某一类对象的基类，所有创建的对象都会共享该原型对象(共享对象

27.构造函数的缺点
造成不必要的内存开销，可定义在原型对象上共享避免资源浪费

28.class类的基础上如何继承
extends 
class Teacher extends Person{}

29.class类的基础上子类如何调用父类的方法
super(name,age) ==constructor(name,age){this.age=age;this.name=name
}

30.class类的基础上子类调用父类的方法
super.sayname();//this.sayname()

31.static方法和继承的关系特点
①静态方法和普通方法一样可以被继承
2.子类可以继承父类的静态方法
3.在子类的静态方法中可以调用父类的静态方法
注意：父类的静态方法中不能调用子类的普通方法

32.什么是静态属性、方法
静态属性、方法是类所独有的方法，实例化的对象无法获取只能通过类名调用
类创建的时候静态属性就会在内存中存在，不用实例化，直接通过类名调用
可以避免系统资源的额外开销

33.普通方法和静态方法的区别
①普通方法每个实例化对象都可以使用，静态方法只能通过类名调用
②内存区别，静态方法可避免系统资源的浪费
③静态方法中不能调用普通方法，普通方法中可以调用静态方法
④相同点：静态方法和普通方法一样都可以被继承

34.static方法中this的指向
指向调用静态方法的类

35.es6如何添加方法
①直接在原型对象上添加方法
②使用Object-assign
Object.assing(Person.prototype,{
sayAge(){console.log(this.age},show(){console.log("show")}})

36.es6可以通过字面量的方式添加属性方法吗？
不能，字面量的方法：class.prototype={sayAge(){console.log(this.age)}}//报错，未定义

37.使用Object-assign添加方法的好处是什么？
不会改变constructor的指向
